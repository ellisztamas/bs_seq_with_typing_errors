# Script to go through each read in a SAM file and extract the position of each
# methylated cytosine across the read.
# Tom Ellis, 15th September 2023

import argparse
import pandas as pd
import numpy as np

import epiclinestools as epi

# Parameters
parser = argparse.ArgumentParser(description = 'Parse parameters ')
parser.add_argument('-i', '--input', help = 'A sorted SAM file generated by Bismark', required = True)
# parser.add_argument('-c', '--counts', help = 'Path to a CSV file to store the cytosine counts', required = True)
parser.add_argument('-o', '--output', help = 'Path to a CSV file to store the methylation probabilities', required = True)
args = parser.parse_args()

sam = epi.read_SAM(args.input)

# For reads matching each SAM flag, create empty vectors
max_read_length = np.array([read.length for read in sam]).max()
print("Longest read in these data is {}bp.".format(max_read_length))

# Dictionaries to store counts of methylated and unmethylated cytosines
methylated = {
    'OT' : np.zeros(max_read_length),
    'CTOT' : np.zeros(max_read_length),
    'CTOB' : np.zeros(max_read_length),
    'OB' : np.zeros(max_read_length)
}
unmethylated = {
    'OT' : np.zeros(max_read_length),
    'CTOT' : np.zeros(max_read_length),
    'CTOB' : np.zeros(max_read_length),
    'OB' : np.zeros(max_read_length)
}

# Find the location of each (un)methylated cytosine in each read, and update the 
# position in the dictionaries
for read in sam:
    # Methylated cytosines
    ix = np.where([l.isupper() for l in read.xm_tag])[0]
    methylated[read.strand][ix] += 1
    # Unmethylated cytosines
    jx = np.where([l.islower() for l in read.xm_tag])[0]
    unmethylated[read.strand][jx] += 1

# Total number of cytosines at each position
total_cytosines = { k: (methylated[k] + unmethylated[k]) for k in methylated.keys() }
# pd.DataFrame(total_cytosines).to_csv(args.counts, index = True)

# Express methylation as a probability
probs = { k: methylated[k] / total_cytosines[k] for k in methylated.keys() }
pd.DataFrame(probs).to_csv(args.output, index = True)


